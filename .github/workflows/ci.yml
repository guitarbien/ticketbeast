name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron:  '0 4 * * sun'
jobs:
  phpunit:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        os: [ubuntu-latest, ubuntu-16.04]
        php-versions: [7.2, 7.3]
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@master #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extension-csv: mbstring, dom, fileinfo, mysql
          coverage: xdebug #optional
      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate
      - name: Install dependencies
        run: |
          composer install --prefer-dist --optimize-autoloader
          npm install
      - name: Package npm for production
        run: npm run prod
      - name: Clear Config
        run: |
          php artisan cache:clear
          php artisan config:clear
          php artisan route:clear
          php artisan optimize:clear
      - name: run phpunit
        run: vendor/bin/phpunit --coverage-clover
#      - name: Test & publish code coverage
#        uses: paambaati/codeclimate-action@v2.2.1
#        env:
#          CC_TEST_REPORTER_ID: <7b746575241d81908d30ac64ff990607172b06d40017cda9f47dde08b1a42402>
#        with:
#          coverageCommand: npm run coverage
#  dusk-php-latest:
#    runs-on: ubuntu-latest
#    steps:
#      - name: show php version
#        run: php -v
#      - uses: actions/checkout@master
#      - name: Copy env
#        run: cp .env.example .env
#      - name: create database
#        run: mysql --user="root" --password="root" -e "CREATE DATABASE homestead character set UTF8mb4 collate utf8mb4_bin;"
#      - name: Install Composer dependencies
#        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
#      - name: Generate Application Key
#        run: php artisan key:generate
#      - name: Install npm dependencies
#        run: npm install
#      - name: Package npm for production
#        run: npm run prod
#      - name: Install laravel dusk
#        run: php artisan dusk:install
#      - name: Start Chrome Driver
#        run: ./vendor/laravel/dusk/bin/chromedriver-linux > /dev/null 2>&1 &
#      - name: Run Laravel Server
#        run: php artisan serve > /dev/null 2>&1 &
#      - name: Run Dusk Tests
#        run: php artisan dusk
