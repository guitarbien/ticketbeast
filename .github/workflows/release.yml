name: create a draft release note

on:
  workflow_dispatch:
    inputs:
      ProjectsColumnName:
        description: 'target column name in github projects (e.g. stage)'
        required: true
      Tag:
        description: 'the tag you want to use in this release (e.g. v1.0.0)'
        required: true

jobs:
  create-draft-release-note:

    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@v2
      with:
        php-version: 7.3
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd
        tools: composer:v2
    - uses: actions/checkout@v2
      with:
        repository: 'guitarbien/working-cli-tools'
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Get composer cache directory
      id: composercache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"
    - name: Cache composer dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composercache.outputs.dir }}
        # Use composer.json for key, if composer.lock is not committed.
        # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - run: ls -al
    - run: php -v
    - name: Generate key
      run: php application key:generate
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Exec command
      run: php application releasing ${{ steps.extract_branch.outputs.branch }} ${{ github.event.inputs.ProjectsColumnName }} ${{ github.event.inputs.Tag }}
      env:
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPO: ${GITHUB_REPOSITORY}
